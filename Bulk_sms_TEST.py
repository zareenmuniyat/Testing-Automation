import os
import requests
import pandas as pd
from datetime import datetime

url = "http://35.240.208.14/api-gateways/config-manager/api/v1/upload-jobs"

payload = {
    'description': 'Hello dear, this is a text sms.',
    'service_id': '1',
    'mask_id': '1',
    'organization_id': '1'
}

# Get list of CSV files from the JOB_FILES folder
folder_path = "JOB_FILES/"
csv_files = [file for file in os.listdir(folder_path) if file.endswith('.csv')]

# Create an empty DataFrame to store results
results_df = pd.DataFrame(columns=["payload", "actual", "message", "error"])

for csv_file in csv_files:
    files = {'file': (csv_file, open(os.path.join(folder_path, csv_file), 'rb'), 'text/csv')}
    headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InphcmVlbiIsInVzZXJfaWQiOjE2LCJwZXJtaXNzaW9ucyI6IlJPT1QsUk9PVCxzaWdudXAsc2lnbnVwLGxvZ2luLGxvZ2luLGxvZ291dCxsb2dvdXQsY2hlY2stdG9rZW4tdmFsaWRhdGlvbixjaGVjay10b2tlbi12YWxpZGF0aW9uLGdldC1yb2xlLW1hcCxnZXQtcm9sZS1tYXAsZ2V0LWxvb2t1cC1zdW1tYXJ5LGdldC1sb29rdXAtc3VtbWFyeSxnZXQtYWxsLWxvb2t1cCxnZXQtYWxsLWxvb2t1cCxnZXQtYWxsLXVuaXF1ZS1sb29rdXAsZ2V0LWFsbC11bmlxdWUtbG9va3VwLGNyZWF0ZS1sb29rdXAsY3JlYXRlLWxvb2t1cCx1cGRhdGUtbG9va3VwLHVwZGF0ZS1sb29rdXAsZGVsZXRlLWxvb2t1cCxkZWxldGUtbG9va3VwLGdldC1hdWRpdC1zdW1tYXJ5LGdldC1hdWRpdC1zdW1tYXJ5LGdldC1hdWRpdC1xdWVyeS1wYXJhbXMsZ2V0LWF1ZGl0LXF1ZXJ5LXBhcmFtcyxnZXQtY2FjaGUtZGF0YSxnZXQtY2FjaGUtZGF0YSxnZXQtbGltaXQtcHJvZmlsZSxnZXQtbGltaXQtcHJvZmlsZSxnZXQtZGV0YWlscy1saW1pdC1wcm9maWxlLGdldC1kZXRhaWxzLWxpbWl0LXByb2ZpbGUsY3JlYXRlLWxpbWl0LXByb2ZpbGUsY3JlYXRlLWxpbWl0LXByb2ZpbGUsdXBkYXRlLWxpbWl0LXByb2ZpbGUsdXBkYXRlLWxpbWl0LXByb2ZpbGUsZGVsZXRlLWxpbWl0LXByb2ZpbGUsZGVsZXRlLWxpbWl0LXByb2ZpbGUsZ2V0LW91dGJvdW5kLWludGVyZmFjZXMsZ2V0LW91dGJvdW5kLWludGVyZmFjZXMsZ2V0LWRldGFpbHMtb3V0Ym91bmQtaW50ZXJmYWNlcyxnZXQtZGV0YWlscy1vdXRib3VuZC1pbnRlcmZhY2VzLGNyZWF0ZS1vdXRib3VuZC1pbnRlcmZhY2VzLGNyZWF0ZS1vdXRib3VuZC1pbnRlcmZhY2VzLHVwZGF0ZS1vdXRib3VuZC1pbnRlcmZhY2VzLHVwZGF0ZS1vdXRib3VuZC1pbnRlcmZhY2VzLGRlbGV0ZS1vdXRib3VuZC1pbnRlcmZhY2VzLGRlbGV0ZS1vdXRib3VuZC1pbnRlcmZhY2VzLHVwbG9hZC1qb2JzLHVwbG9hZC1qb2JzLGpvYi1zdGF0dXMtYXBwcm92ZSxqb2Itc3RhdHVzLWFwcHJvdmUsam9iLXN0YXR1cy1vYnNlcnZlLGpvYi1zdGF0dXMtb2JzZXJ2ZSxqb2ItcmVxdWVzdC1zdW1tYXJ5LGpvYi1yZXF1ZXN0LXN1bW1hcnksc2VuZC1zaW5nbGUtc21zLHNlbmQtc2luZ2xlLXNtcyxoZWFsdGgtY2hlY2ssaGVhbHRoLWNoZWNrLHBlcnNpc3RNZXNzYWdlLHBlcnNpc3RNZXNzYWdlLHJldHJpZXZlTWVzc2FnZSxyZXRyaWV2ZU1lc3NhZ2Usc2VhcmNoTWVzc2FnZSxzZWFyY2hNZXNzYWdlLHVwZGF0ZU1lc3NhZ2UsdXBkYXRlTWVzc2FnZSxkZWxldGVNZXNzYWdlLGRlbGV0ZU1lc3NhZ2UsZ2V0LWRldGFpbHMtbG9va3VwLGdldC1kZXRhaWxzLWxvb2t1cCxqb2Itc3RhdHVzLXJlamVjdCxqb2Itc3RhdHVzLXJlamVjdCxqb2Itc3RhdHVzLXBhdXNlLGpvYi1zdGF0dXMtcGF1c2Usam9iLXN0YXR1cy1wbGF5LGpvYi1zdGF0dXMtcGxheSxqb2Itc3RhdHVzLWNhbmNlbCxqb2Itc3RhdHVzLWNhbmNlbCxqb2ItZGV0YWlscy1yZXF1ZXN0LXN1bW1hcnksam9iLWRldGFpbHMtcmVxdWVzdC1zdW1tYXJ5LGpvYi1yZXF1ZXN0LWRldGFpbHMsam9iLXJlcXVlc3QtZGV0YWlscyxqb2ItZGV0YWlscy1yZXF1ZXN0LWRldGFpbHMsam9iLWRldGFpbHMtcmVxdWVzdC1kZXRhaWxzLHVzZXItbGlzdCx1c2VyLWxpc3QsdXNlci1kZXRhaWxzLHVzZXItZGV0YWlscyxyb2xlLWxpc3Qscm9sZS1saXN0LHJvbGUtZGV0YWlscyxyb2xlLWRldGFpbHMscm9sZS1wZXJtaXNzaW9uLHJvbGUtcGVybWlzc2lvbix1c2VyLXJvbGUsdXNlci1yb2xlLHVzZXItcm9sZS1jaGFuZ2UsdXNlci1yb2xlLWNoYW5nZSxyb2xlLXBlcm1pc3Npb24tY2hhbmdlLHJvbGUtcGVybWlzc2lvbi1jaGFuZ2UsZ2V0LXNtcy12ZW5kb3ItY29uZmlnLGdldC1zbXMtdmVuZG9yLWNvbmZpZyxnZXQtZGV0YWlscy1zbXMtdmVuZG9yLWNvbmZpZyxnZXQtZGV0YWlscy1zbXMtdmVuZG9yLWNvbmZpZyxjcmVhdGUtc21zLXZlbmRvci1jb25maWcsY3JlYXRlLXNtcy12ZW5kb3ItY29uZmlnLHVwZGF0ZS1zbXMtdmVuZG9yLWNvbmZpZyx1cGRhdGUtc21zLXZlbmRvci1jb25maWcsZGVsZXRlLXNtcy12ZW5kb3ItY29uZmlnLGRlbGV0ZS1zbXMtdmVuZG9yLWNvbmZpZyxnZXQtcXVldWUtc2VsZWN0aW9uLGdldC1xdWV1ZS1zZWxlY3Rpb24sZ2V0LWRldGFpbHMtcXVldWUtc2VsZWN0aW9uLGdldC1kZXRhaWxzLXF1ZXVlLXNlbGVjdGlvbixjcmVhdGUtcXVldWUtc2VsZWN0aW9uLGNyZWF0ZS1xdWV1ZS1zZWxlY3Rpb24sdXBkYXRlLXF1ZXVlLXNlbGVjdGlvbix1cGRhdGUtcXVldWUtc2VsZWN0aW9uLGRlbGV0ZS1xdWV1ZS1zZWxlY3Rpb24sZGVsZXRlLXF1ZXVlLXNlbGVjdGlvbixnZXQtcXVldWUtZGV0YWlscyxnZXQtcXVldWUtZGV0YWlscyxnZXQtZGV0YWlscy1xdWV1ZS1kZXRhaWxzLGdldC1kZXRhaWxzLXF1ZXVlLWRldGFpbHMsY3JlYXRlLXF1ZXVlLWRldGFpbHMsY3JlYXRlLXF1ZXVlLWRldGFpbHMsdXBkYXRlLXF1ZXVlLWRldGFpbHMsdXBkYXRlLXF1ZXVlLWRldGFpbHMsZGVsZXRlLXF1ZXVlLWRldGFpbHMsZGVsZXRlLXF1ZXVlLWRldGFpbHMsZ2V0LXRlbGNvLXdpc2UtcXVldWUtc2VsZWN0aW9uLGdldC10ZWxjby13aXNlLXF1ZXVlLXNlbGVjdGlvbixnZXQtZGV0YWlscy10ZWxjby13aXNlLXF1ZXVlLXNlbGVjdGlvbixnZXQtZGV0YWlscy10ZWxjby13aXNlLXF1ZXVlLXNlbGVjdGlvbixjcmVhdGUtdGVsY28td2lzZS1xdWV1ZS1zZWxlY3Rpb24sY3JlYXRlLXRlbGNvLXdpc2UtcXVldWUtc2VsZWN0aW9uLHVwZGF0ZS10ZWxjby13aXNlLXF1ZXVlLXNlbGVjdGlvbix1cGRhdGUtdGVsY28td2lzZS1xdWV1ZS1zZWxlY3Rpb24sZGVsZXRlLXRlbGNvLXdpc2UtcXVldWUtc2VsZWN0aW9uLGRlbGV0ZS10ZWxjby13aXNlLXF1ZXVlLXNlbGVjdGlvbixzaW5nbGVTbXNTZW5kLHNpbmdsZVNtc1NlbmQsYnVsa1Ntc1NlbmQsYnVsa1Ntc1NlbmQsc3RyZWFtRXZlbnQsc3RyZWFtRXZlbnQsbWVzc2FnZVNlYXJjaCxtZXNzYWdlU2VhcmNoLG1lc3NhZ2UsbWVzc2FnZSxyZXBvcnQtZG93bmxvYWQscmVwb3J0LWRvd25sb2FkLHJvbGUtdXBkYXRlLHJvbGUtdXBkYXRlLHJvbGUtY3JlYXRlLHJvbGUtY3JlYXRlLGV2ZW50LXJlc3QsZXZlbnQtcmVzdCxldmVudC1zdGF0dXMtY291bnQsZXZlbnQtc3RhdHVzLWNvdW50LHNlYXJjaC10b2tlbixzZWFyY2gtdG9rZW4iLCJpYXQiOjE3MTQ4ODY1MzcsImV4cCI6MTcxNTE0NTczN30.36xRYvKSIjA8cu2cidT6Bw0-iaK0SNeCkvC27CWOf2g'}

    # Make the POST request for each CSV file
    response = requests.post(url, headers=headers, data=payload, files=files)
    print(response.text)
    
    # Parse response
    response_data = response.json()
    actual = response_data.get("isSuccess")
    message = response_data.get("message")
    error = response_data.get("error")
    
    # Append data to DataFrame
    results_df = pd.concat([results_df, pd.DataFrame({"payload": [csv_file], "actual": [actual], "message": [message], "error": [error]})], ignore_index=True)
# Get current date and time
current_datetime = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")

# Create folder if it doesn't exist
output_folder = "OUTPUT/BULK_SMS_RESULT/"
os.makedirs(output_folder, exist_ok=True)
